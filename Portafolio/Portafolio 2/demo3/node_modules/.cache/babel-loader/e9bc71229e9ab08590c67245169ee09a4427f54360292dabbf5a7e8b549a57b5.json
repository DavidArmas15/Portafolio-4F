{"ast":null,"code":"var _jsxFileName = \"/home/mrjj/Class/react/class4/src/components/tablea.jsx\",\n  _s = $RefreshSig$();\nimport DataTable from 'react-data-table-component';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cablecom(url) {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await fetch('https://thesimpsonsquoteapi.glitch.me/quotes?count=20');\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const jsonData = await response.json();\n      setData(jsonData);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const columns = [{\n    name: 'ID',\n    selector: 'id',\n    sortable: true\n  }, {\n    name: 'Name',\n    selector: 'name',\n    sortable: true\n  }, {\n    name: 'Email',\n    selector: 'email',\n    sortable: true\n  }\n  // Add more columns as needed\n  ];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Data Table Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(DataTable, {\n      columns: columns,\n      data: data,\n      pagination: true,\n      highlightOnHover: true,\n      striped: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Cablecom, \"YP7e7Smzxlgf2d3MqLcgRZjo83U=\");\n_c = Cablecom;\n;\nvar _c;\n$RefreshReg$(_c, \"Cablecom\");","map":{"version":3,"names":["DataTable","React","useState","useEffect","jsxDEV","_jsxDEV","Cablecom","url","_s","data","setData","loading","setLoading","fetchData","response","fetch","ok","Error","jsonData","json","error","console","columns","name","selector","sortable","children","fileName","_jsxFileName","lineNumber","columnNumber","pagination","highlightOnHover","striped","_c","$RefreshReg$"],"sources":["/home/mrjj/Class/react/class4/src/components/tablea.jsx"],"sourcesContent":["import DataTable from 'react-data-table-component';\nimport React, { useState, useEffect } from 'react';\n\nexport default function Cablecom(url){\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch('https://thesimpsonsquoteapi.glitch.me/quotes?count=20');\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const jsonData = await response.json();\n      setData(jsonData);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const columns = [\n    {\n      name: 'ID',\n      selector: 'id',\n      sortable: true,\n    },\n    {\n      name: 'Name',\n      selector: 'name',\n      sortable: true,\n    },\n    {\n      name: 'Email',\n      selector: 'email',\n      sortable: true,\n    },\n    // Add more columns as needed\n  ];\n\n  return (\n    <div>\n      <h2>Data Table Example</h2>\n      {loading ? (\n        <div>Loading...</div>\n      ) : (\n        <DataTable\n          columns={columns}\n          data={data}\n          pagination\n          highlightOnHover\n          striped\n        />\n      )}\n    </div>\n  );\n};"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,4BAA4B;AAClD,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,QAAQA,CAACC,GAAG,EAAC;EAAAC,EAAA;EACnC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdU,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uDAAuD,CAAC;MACrF,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,MAAMC,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACtCT,OAAO,CAACQ,QAAQ,CAAC;MACjBN,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAME,OAAO,GAAG,CACd;IACEC,IAAI,EAAE,IAAI;IACVC,QAAQ,EAAE,IAAI;IACdC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEF,IAAI,EAAE,MAAM;IACZC,QAAQ,EAAE,MAAM;IAChBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEF,IAAI,EAAE,OAAO;IACbC,QAAQ,EAAE,OAAO;IACjBC,QAAQ,EAAE;EACZ;EACA;EAAA,CACD;EAED,oBACEpB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC1BnB,OAAO,gBACNN,OAAA;MAAAqB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAErBzB,OAAA,CAACL,SAAS;MACRsB,OAAO,EAAEA,OAAQ;MACjBb,IAAI,EAAEA,IAAK;MACXsB,UAAU;MACVC,gBAAgB;MAChBC,OAAO;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACtB,EAAA,CAzDuBF,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAyD/B;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}