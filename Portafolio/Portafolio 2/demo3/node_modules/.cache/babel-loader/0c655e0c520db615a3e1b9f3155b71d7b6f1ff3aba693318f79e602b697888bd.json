{"ast":null,"code":"var _s = $RefreshSig$();\nimport DataTable from 'react-data-table-component';\nimport React, { useState, useEffect } from 'react';\nexport default function Cablecom(url) {\n  _s();\n  var urlfecht = url;\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch(urlfecht).then(response => response.json()).then(result => {\n      setIsLoading(false);\n      setData(result);\n    }, error => {\n      setIsLoading(false);\n      setError(error);\n    });\n  }, []);\n  const columns = [{\n    name: 'Frase',\n    selector: 'data.quote',\n    sortable: true\n  }, {\n    name: 'Personaje',\n    selector: 'data.character',\n    sortable: true\n  }, {\n    name: 'Imagen',\n    selector: 'data.image',\n    sortable: true\n  }, {\n    name: 'Politica',\n    selector: 'characterDirection'\n  }];\n  return console.log(data.map);\n}\n_s(Cablecom, \"oHNKtHcXBLfWEYHeRSlN5KEv5w0=\");\n_c = Cablecom;\nvar _c;\n$RefreshReg$(_c, \"Cablecom\");","map":{"version":3,"names":["DataTable","React","useState","useEffect","Cablecom","url","_s","urlfecht","data","setData","isLoading","setIsLoading","error","setError","fetch","then","response","json","result","columns","name","selector","sortable","console","log","map","_c","$RefreshReg$"],"sources":["/home/mrjj/Class/react/class4/src/components/tablea.jsx"],"sourcesContent":["import DataTable from 'react-data-table-component';\nimport React, { useState, useEffect } from 'react';\n\nexport default function Cablecom(url){\n    var urlfecht= url\n    const [data, setData] = useState(null)\n  const [isLoading, setIsLoading] = useState(true)\n  const [error, setError] = useState(null)\n\n  useEffect (()=>{\n    fetch(urlfecht)\n      .then(response => response.json())\n      .then(result =>{\n        setIsLoading(false);\n        setData(result);\n      }, error=>{\n        setIsLoading(false);\n        setError(error);\n      })\n  },[]);\n\n      const columns = [\n        {\n          name: 'Frase',\n          selector: 'data.quote',\n          sortable: true,\n        },\n        {\n          name: 'Personaje',\n          selector: 'data.character',\n          sortable: true,\n        },\n        {\n          name: 'Imagen',\n          selector: 'data.image',\n          sortable: true,\n        },\n        {\n          name: 'Politica',\n          selector: 'characterDirection',\n        },\n      ];\n      \n\n    return(\n      console.log(data.map)\n    )\n\n}"],"mappings":";AAAA,OAAOA,SAAS,MAAM,4BAA4B;AAClD,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,eAAe,SAASC,QAAQA,CAACC,GAAG,EAAC;EAAAC,EAAA;EACjC,IAAIC,QAAQ,GAAEF,GAAG;EACjB,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAE,MAAI;IACbW,KAAK,CAACP,QAAQ,CAAC,CACZQ,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,MAAM,IAAG;MACbP,YAAY,CAAC,KAAK,CAAC;MACnBF,OAAO,CAACS,MAAM,CAAC;IACjB,CAAC,EAAEN,KAAK,IAAE;MACRD,YAAY,CAAC,KAAK,CAAC;MACnBE,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC,CAAC;EACN,CAAC,EAAC,EAAE,CAAC;EAED,MAAMO,OAAO,GAAG,CACd;IACEC,IAAI,EAAE,OAAO;IACbC,QAAQ,EAAE,YAAY;IACtBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEF,IAAI,EAAE,WAAW;IACjBC,QAAQ,EAAE,gBAAgB;IAC1BC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEF,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAE,YAAY;IACtBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEF,IAAI,EAAE,UAAU;IAChBC,QAAQ,EAAE;EACZ,CAAC,CACF;EAGH,OACEE,OAAO,CAACC,GAAG,CAAChB,IAAI,CAACiB,GAAG,CAAC;AAG3B;AAACnB,EAAA,CA7CuBF,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}